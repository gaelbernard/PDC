<?xml version="1.0" encoding="UTF-8"?><model><assignment language="ConDec" name="Declare model mined using MINERful miner"><activitydefinitions><activity id="1" name="a"/><activity id="2" name="aa"/><activity id="3" name="ab"/><activity id="4" name="ac"/><activity id="5" name="ad"/><activity id="6" name="ae"/><activity id="7" name="af"/><activity id="8" name="ag"/><activity id="9" name="ah"/><activity id="10" name="ai"/><activity id="11" name="aj"/><activity id="12" name="ak"/><activity id="13" name="al"/><activity id="14" name="am"/><activity id="15" name="an"/><activity id="16" name="ao"/><activity id="17" name="ap"/><activity id="18" name="aq"/><activity id="19" name="ar"/><activity id="20" name="b"/><activity id="21" name="c"/><activity id="22" name="d"/><activity id="23" name="e"/><activity id="24" name="f"/><activity id="25" name="g"/><activity id="26" name="h"/><activity id="27" name="i"/><activity id="28" name="j"/><activity id="29" name="k"/><activity id="30" name="l"/><activity id="31" name="m"/><activity id="32" name="n"/><activity id="33" name="o"/><activity id="34" name="p"/><activity id="35" name="q"/><activity id="36" name="r"/><activity id="37" name="s"/><activity id="38" name="t"/><activity id="39" name="u"/><activity id="40" name="v"/><activity id="41" name="w"/><activity id="42" name="x"/><activity id="43" name="y"/><activity id="44" name="z"/></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.189286;IF;0.188272</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.066071;IF;0.065717</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ac"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.066071;IF;0.065717</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ad"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.094643;IF;0.094136</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ae"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.482143;IF;0.232462</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="af"/></branches></parameter></constraintparameters></constraint><constraint id="9" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  );support;1.000000;confidence;0.482143;IF;0.232462</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="af"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="13" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.083929;IF;0.083479</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ag"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="14" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.994643;IF;0.989314</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="19" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.094643;IF;0.094136</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ao"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="20" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.426786;IF;0.182146</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ap"/></branches></parameter></constraintparameters></constraint><constraint id="27" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.425000;IF;0.180625</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ar"/></branches></parameter></constraintparameters></constraint><constraint id="28" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;1.000000;confidence;0.426786;IF;0.181384</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ap"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ar"/></branches></parameter></constraintparameters></constraint><constraint id="36" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.482143;IF;0.232462</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="37" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) );support;1.000000;confidence;0.482143;IF;0.232462</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="af"/></branches></parameter></constraintparameters></constraint><constraint id="44" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.573214;IF;0.328575</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="c"/></branches></parameter></constraintparameters></constraint><constraint id="52" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.092857;IF;0.092360</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="d"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="53" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.550000;IF;0.302500</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="f"/></branches></parameter></constraintparameters></constraint><constraint id="63" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.094643;IF;0.094136</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="k"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="66" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.114286;IF;0.113673</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="n"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="68" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.264286;IF;0.069847</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="o"/></branches></parameter></constraintparameters></constraint><constraint id="69" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.264286;IF;0.262870</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="o"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="72" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.264286;IF;0.255791</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="o"/></branches></parameter><parameter templateparameter="2"><branches><branch name="t"/></branches></parameter></constraintparameters></constraint><constraint id="75" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.517857;IF;0.268176</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="p"/></branches></parameter></constraintparameters></constraint><constraint id="80" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.200000;IF;0.198929</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="r"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="82" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.278571;IF;0.077602</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="s"/></branches></parameter></constraintparameters></constraint><constraint id="88" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.967857;IF;0.936747</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="t"/></branches></parameter></constraintparameters></constraint><constraint id="89" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;1.000000;confidence;0.994643;IF;0.962672</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="ak"/></branches></parameter><parameter templateparameter="2"><branches><branch name="t"/></branches></parameter></constraintparameters></constraint><constraint id="106" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.253571;IF;0.064298</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="v"/></branches></parameter></constraintparameters></constraint><constraint id="107" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;1.000000;confidence;0.264286;IF;0.067015</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="o"/></branches></parameter><parameter templateparameter="2"><branches><branch name="v"/></branches></parameter></constraintparameters></constraint><constraint id="108" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.253571;IF;0.252213</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="v"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="114" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.253571;IF;0.245421</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="v"/></branches></parameter><parameter templateparameter="2"><branches><branch name="t"/></branches></parameter></constraintparameters></constraint><constraint id="117" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;1.000000;confidence;0.260714;IF;0.066110</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="x"/></branches></parameter><parameter templateparameter="2"><branches><branch name="v"/></branches></parameter></constraintparameters></constraint><constraint id="118" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.096429;IF;0.095912</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="w"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="120" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.260714;IF;0.067972</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="x"/></branches></parameter></constraintparameters></constraint><constraint id="121" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;1.000000;confidence;0.264286;IF;0.068903</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="o"/></branches></parameter><parameter templateparameter="2"><branches><branch name="x"/></branches></parameter></constraintparameters></constraint><constraint id="122" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.260714;IF;0.259318</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="x"/></branches></parameter><parameter templateparameter="2"><branches><branch name="ak"/></branches></parameter></constraintparameters></constraint><constraint id="126" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;1.000000;confidence;0.260714;IF;0.252334</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="x"/></branches></parameter><parameter templateparameter="2"><branches><branch name="t"/></branches></parameter></constraintparameters></constraint><constraint id="128" mandatory="true"><condition></condition><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;1.000000;confidence;0.269643;IF;0.072707</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="z"/></branches></parameter></constraintparameters></constraint><constraint id="129" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;1.000000;confidence;0.278571;IF;0.075115</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="s"/></branches></parameter><parameter templateparameter="2"><branches><branch name="z"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><graphical><activities><cell height="50.0" id="1" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="2" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="3" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="4" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="5" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="6" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="7" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="8" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="9" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="10" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="11" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="12" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="13" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="14" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="15" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="16" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="17" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="18" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="19" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="20" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="21" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="22" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="23" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="24" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="25" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="26" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="27" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="28" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="29" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="30" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="31" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="32" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="33" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="34" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="35" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="36" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="37" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="38" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="39" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="40" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="41" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="42" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="43" width="90.0" x="10.0" y="10.0"/><cell height="50.0" id="44" width="90.0" x="10.0" y="10.0"/></activities><constraints><cell height="1.0" id="1" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="4" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="5" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="6" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="9" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="13" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="19" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="28" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="37" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="52" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="63" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="66" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="69" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="72" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="80" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="89" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="107" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="108" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="114" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="117" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="118" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="121" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="122" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="126" width="1.0" x="55.0" y="35.0"/><cell height="1.0" id="129" width="1.0" x="55.0" y="35.0"/></constraints></graphical></assignment></model>